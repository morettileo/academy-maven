/*
 * Afea Device Manager API
 * Afea Device Manager API
 *
 * OpenAPI spec version: 1.5.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package eu.afea.academy.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Printer Base
 */
@ApiModel(description = "Printer Base")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-01T15:40:07.215+02:00")
public class PrinterBaseDTO {
  @JsonProperty("id")
  private String id = null;

  /**
   * Tipo stampante
   */
  public enum PrinterTypeEnum {
    GENERAL_PURPOSE("GENERAL_PURPOSE"),
    
    ZEBRA("ZEBRA");

    private String value;

    PrinterTypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static PrinterTypeEnum fromValue(String text) {
      for (PrinterTypeEnum b : PrinterTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("printerType")
  private PrinterTypeEnum printerType = null;

  @JsonProperty("local")
  private Boolean local = null;

  public PrinterBaseDTO id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id stampante
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Id stampante")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PrinterBaseDTO printerType(PrinterTypeEnum printerType) {
    this.printerType = printerType;
    return this;
  }

   /**
   * Tipo stampante
   * @return printerType
  **/
  @ApiModelProperty(required = true, value = "Tipo stampante")
  public PrinterTypeEnum getPrinterType() {
    return printerType;
  }

  public void setPrinterType(PrinterTypeEnum printerType) {
    this.printerType = printerType;
  }

  public PrinterBaseDTO local(Boolean local) {
    this.local = local;
    return this;
  }

   /**
   * Indica se il dispositivo di stampa è locale o di rete
   * @return local
  **/
  @ApiModelProperty(required = true, value = "Indica se il dispositivo di stampa è locale o di rete")
  public Boolean isLocal() {
    return local;
  }

  public void setLocal(Boolean local) {
    this.local = local;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrinterBaseDTO printerBase = (PrinterBaseDTO) o;
    return Objects.equals(this.id, printerBase.id) &&
        Objects.equals(this.printerType, printerBase.printerType) &&
        Objects.equals(this.local, printerBase.local);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, printerType, local);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrinterBaseDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    printerType: ").append(toIndentedString(printerType)).append("\n");
    sb.append("    local: ").append(toIndentedString(local)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

