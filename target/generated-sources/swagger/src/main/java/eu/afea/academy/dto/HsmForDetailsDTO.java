/*
 * Afea Device Manager API
 * Afea Device Manager API
 *
 * OpenAPI spec version: 1.5.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package eu.afea.academy.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import eu.afea.academy.dto.HsmFeaturesDTO;
import eu.afea.academy.dto.HsmKeyDTO;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * HSM for details
 */
@ApiModel(description = "HSM for details")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-01T15:40:07.215+02:00")
public class HsmForDetailsDTO {
  @JsonProperty("id")
  private String id = null;

  /**
   * Tipo di dispositivo di firma
   */
  public enum TypeEnum {
    USB_TOKEN("USB_TOKEN"),
    
    SMARTCARD("SMARTCARD"),
    
    NETWORK_HSM("NETWORK_HSM");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("local")
  private Boolean local = null;

  /**
   * Id del dispositivo di firma
   */
  public enum StateEnum {
    IN("LOGGED_IN"),
    
    OUT("LOGGED_OUT");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StateEnum fromValue(String text) {
      for (StateEnum b : StateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("state")
  private StateEnum state = null;

  @JsonProperty("features")
  private HsmFeaturesDTO features = null;

  @JsonProperty("keys")
  private List<HsmKeyDTO> keys = null;

   /**
   * Id del dispositivo di firma
   * @return id
  **/
  @ApiModelProperty(value = "Id del dispositivo di firma")
  public String getId() {
    return id;
  }

   /**
   * Tipo di dispositivo di firma
   * @return type
  **/
  @ApiModelProperty(value = "Tipo di dispositivo di firma")
  public TypeEnum getType() {
    return type;
  }

   /**
   * Indica se il dispositivo di firma è locale o di rete
   * @return local
  **/
  @ApiModelProperty(value = "Indica se il dispositivo di firma è locale o di rete")
  public Boolean isLocal() {
    return local;
  }

   /**
   * Id del dispositivo di firma
   * @return state
  **/
  @ApiModelProperty(value = "Id del dispositivo di firma")
  public StateEnum getState() {
    return state;
  }

   /**
   * Feature del dispositivo di firma
   * @return features
  **/
  @ApiModelProperty(value = "Feature del dispositivo di firma")
  public HsmFeaturesDTO getFeatures() {
    return features;
  }

   /**
   * Elenco delle chiavi con dettagli disponibili nel dispositivo di firma
   * @return keys
  **/
  @ApiModelProperty(value = "Elenco delle chiavi con dettagli disponibili nel dispositivo di firma")
  public List<HsmKeyDTO> getKeys() {
    return keys;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HsmForDetailsDTO hsmForDetails = (HsmForDetailsDTO) o;
    return Objects.equals(this.id, hsmForDetails.id) &&
        Objects.equals(this.type, hsmForDetails.type) &&
        Objects.equals(this.local, hsmForDetails.local) &&
        Objects.equals(this.state, hsmForDetails.state) &&
        Objects.equals(this.features, hsmForDetails.features) &&
        Objects.equals(this.keys, hsmForDetails.keys);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, local, state, features, keys);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HsmForDetailsDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    local: ").append(toIndentedString(local)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    keys: ").append(toIndentedString(keys)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

