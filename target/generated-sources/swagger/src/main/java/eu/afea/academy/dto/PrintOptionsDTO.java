/*
 * Afea Device Manager API
 * Afea Device Manager API
 *
 * OpenAPI spec version: 1.5.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package eu.afea.academy.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Print Options
 */
@ApiModel(description = "Print Options")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-01T15:40:07.215+02:00")
public class PrintOptionsDTO {
  @JsonProperty("autoResize")
  private Boolean autoResize = null;

  /**
   * fronte retro
   */
  public enum DuplexEnum {
    NO_DUPLEX("NO_DUPLEX"),
    
    LONG_EDGE("LONG_EDGE"),
    
    SHORT_EDGE("SHORT_EDGE");

    private String value;

    DuplexEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DuplexEnum fromValue(String text) {
      for (DuplexEnum b : DuplexEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("duplex")
  private DuplexEnum duplex = null;

  @JsonProperty("paperSize")
  private String paperSize = null;

  @JsonProperty("paperSource")
  private String paperSource = null;

  @JsonProperty("showDialog")
  private Boolean showDialog = null;

  public PrintOptionsDTO autoResize(Boolean autoResize) {
    this.autoResize = autoResize;
    return this;
  }

   /**
   * opzione di autoresize
   * @return autoResize
  **/
  @ApiModelProperty(value = "opzione di autoresize")
  public Boolean isAutoResize() {
    return autoResize;
  }

  public void setAutoResize(Boolean autoResize) {
    this.autoResize = autoResize;
  }

  public PrintOptionsDTO duplex(DuplexEnum duplex) {
    this.duplex = duplex;
    return this;
  }

   /**
   * fronte retro
   * @return duplex
  **/
  @ApiModelProperty(required = true, value = "fronte retro")
  public DuplexEnum getDuplex() {
    return duplex;
  }

  public void setDuplex(DuplexEnum duplex) {
    this.duplex = duplex;
  }

  public PrintOptionsDTO paperSize(String paperSize) {
    this.paperSize = paperSize;
    return this;
  }

   /**
   * formato pagina
   * @return paperSize
  **/
  @ApiModelProperty(value = "formato pagina")
  public String getPaperSize() {
    return paperSize;
  }

  public void setPaperSize(String paperSize) {
    this.paperSize = paperSize;
  }

  public PrintOptionsDTO paperSource(String paperSource) {
    this.paperSource = paperSource;
    return this;
  }

   /**
   * sorgente carta
   * @return paperSource
  **/
  @ApiModelProperty(value = "sorgente carta")
  public String getPaperSource() {
    return paperSource;
  }

  public void setPaperSource(String paperSource) {
    this.paperSource = paperSource;
  }

  public PrintOptionsDTO showDialog(Boolean showDialog) {
    this.showDialog = showDialog;
    return this;
  }

   /**
   * dialog di stampa
   * @return showDialog
  **/
  @ApiModelProperty(value = "dialog di stampa")
  public Boolean isShowDialog() {
    return showDialog;
  }

  public void setShowDialog(Boolean showDialog) {
    this.showDialog = showDialog;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PrintOptionsDTO printOptions = (PrintOptionsDTO) o;
    return Objects.equals(this.autoResize, printOptions.autoResize) &&
        Objects.equals(this.duplex, printOptions.duplex) &&
        Objects.equals(this.paperSize, printOptions.paperSize) &&
        Objects.equals(this.paperSource, printOptions.paperSource) &&
        Objects.equals(this.showDialog, printOptions.showDialog);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autoResize, duplex, paperSize, paperSource, showDialog);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PrintOptionsDTO {\n");
    
    sb.append("    autoResize: ").append(toIndentedString(autoResize)).append("\n");
    sb.append("    duplex: ").append(toIndentedString(duplex)).append("\n");
    sb.append("    paperSize: ").append(toIndentedString(paperSize)).append("\n");
    sb.append("    paperSource: ").append(toIndentedString(paperSource)).append("\n");
    sb.append("    showDialog: ").append(toIndentedString(showDialog)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

