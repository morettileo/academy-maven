/*
 * Afea Device Manager API
 * Afea Device Manager API
 *
 * OpenAPI spec version: 1.5.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package eu.afea.academy.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import eu.afea.academy.dto.DocumentDTO;
import eu.afea.academy.dto.OperationDTO;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * Document bundle
 */
@ApiModel(description = "Document bundle")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-01T15:40:07.215+02:00")
public class BundleDTO {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("documents")
  private List<DocumentDTO> documents = null;

  @JsonProperty("operations")
  private List<OperationDTO> operations = null;

  /**
   * stato del bundle
   */
  public enum ProcessingStateEnum {
    IDLE("IDLE"),
    
    PENDING("PENDING"),
    
    WORKING("WORKING"),
    
    PAUSED("PAUSED"),
    
    COMPLETED("COMPLETED"),
    
    ERROR("ERROR");

    private String value;

    ProcessingStateEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static ProcessingStateEnum fromValue(String text) {
      for (ProcessingStateEnum b : ProcessingStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("processingState")
  private ProcessingStateEnum processingState = null;

  @JsonProperty("creationTime")
  private Date creationTime = null;

  @JsonProperty("lastActivityTime")
  private Date lastActivityTime = null;

   /**
   * id del bundle
   * @return id
  **/
  @ApiModelProperty(value = "id del bundle")
  public String getId() {
    return id;
  }

  public BundleDTO documents(List<DocumentDTO> documents) {
    this.documents = documents;
    return this;
  }

  public BundleDTO addDocumentsItem(DocumentDTO documentsItem) {
    if (this.documents == null) {
      this.documents = new ArrayList<DocumentDTO>();
    }
    this.documents.add(documentsItem);
    return this;
  }

   /**
   * elenco dei documenti contenuti nel bundle ordinati per priorità di processamento: il primo documento dell&#39;array è il primo ad essere processato
   * @return documents
  **/
  @ApiModelProperty(value = "elenco dei documenti contenuti nel bundle ordinati per priorità di processamento: il primo documento dell'array è il primo ad essere processato")
  public List<DocumentDTO> getDocuments() {
    return documents;
  }

  public void setDocuments(List<DocumentDTO> documents) {
    this.documents = documents;
  }

  public BundleDTO operations(List<OperationDTO> operations) {
    this.operations = operations;
    return this;
  }

  public BundleDTO addOperationsItem(OperationDTO operationsItem) {
    if (this.operations == null) {
      this.operations = new ArrayList<OperationDTO>();
    }
    this.operations.add(operationsItem);
    return this;
  }

   /**
   * elenco delle operazioni associate al bundle
   * @return operations
  **/
  @ApiModelProperty(value = "elenco delle operazioni associate al bundle")
  public List<OperationDTO> getOperations() {
    return operations;
  }

  public void setOperations(List<OperationDTO> operations) {
    this.operations = operations;
  }

   /**
   * stato del bundle
   * @return processingState
  **/
  @ApiModelProperty(value = "stato del bundle")
  public ProcessingStateEnum getProcessingState() {
    return processingState;
  }

   /**
   * istante di creazione del bundle
   * @return creationTime
  **/
  @ApiModelProperty(value = "istante di creazione del bundle")
  public Date getCreationTime() {
    return creationTime;
  }

   /**
   * istante dell&#39;ultimo utilizzo del bundle
   * @return lastActivityTime
  **/
  @ApiModelProperty(value = "istante dell'ultimo utilizzo del bundle")
  public Date getLastActivityTime() {
    return lastActivityTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BundleDTO bundle = (BundleDTO) o;
    return Objects.equals(this.id, bundle.id) &&
        Objects.equals(this.documents, bundle.documents) &&
        Objects.equals(this.operations, bundle.operations) &&
        Objects.equals(this.processingState, bundle.processingState) &&
        Objects.equals(this.creationTime, bundle.creationTime) &&
        Objects.equals(this.lastActivityTime, bundle.lastActivityTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, documents, operations, processingState, creationTime, lastActivityTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BundleDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    documents: ").append(toIndentedString(documents)).append("\n");
    sb.append("    operations: ").append(toIndentedString(operations)).append("\n");
    sb.append("    processingState: ").append(toIndentedString(processingState)).append("\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    lastActivityTime: ").append(toIndentedString(lastActivityTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

