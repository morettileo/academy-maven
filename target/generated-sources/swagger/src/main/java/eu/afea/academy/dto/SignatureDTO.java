/*
 * Afea Device Manager API
 * Afea Device Manager API
 *
 * OpenAPI spec version: 1.5.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package eu.afea.academy.dto;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import eu.afea.academy.dto.CredentialsDTO;
import eu.afea.academy.dto.LabelDTO;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Signature/timestamp details
 */
@ApiModel(description = "Signature/timestamp details")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2022-07-01T15:40:07.215+02:00")
public class SignatureDTO {
  @JsonProperty("hsmId")
  private String hsmId = null;

  @JsonProperty("keyAlias")
  private String keyAlias = null;

  @JsonProperty("reason")
  private String reason = null;

  @JsonProperty("location")
  private String location = null;

  @JsonProperty("credentials")
  private CredentialsDTO credentials = null;

  @JsonProperty("label")
  private LabelDTO label = null;

  public SignatureDTO hsmId(String hsmId) {
    this.hsmId = hsmId;
    return this;
  }

   /**
   * id del dispositivo di firma/marcatura
   * @return hsmId
  **/
  @ApiModelProperty(required = true, value = "id del dispositivo di firma/marcatura")
  public String getHsmId() {
    return hsmId;
  }

  public void setHsmId(String hsmId) {
    this.hsmId = hsmId;
  }

  public SignatureDTO keyAlias(String keyAlias) {
    this.keyAlias = keyAlias;
    return this;
  }

   /**
   * chiave da utilizzare per l&#39;operazione
   * @return keyAlias
  **/
  @ApiModelProperty(required = true, value = "chiave da utilizzare per l'operazione")
  public String getKeyAlias() {
    return keyAlias;
  }

  public void setKeyAlias(String keyAlias) {
    this.keyAlias = keyAlias;
  }

  public SignatureDTO reason(String reason) {
    this.reason = reason;
    return this;
  }

   /**
   * motivo dell&#39;operazione (motivo della firma e/o della marcatura)
   * @return reason
  **/
  @ApiModelProperty(value = "motivo dell'operazione (motivo della firma e/o della marcatura)")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public SignatureDTO location(String location) {
    this.location = location;
    return this;
  }

   /**
   * luogo in cui è avvenuta l&#39;operazione
   * @return location
  **/
  @ApiModelProperty(value = "luogo in cui è avvenuta l'operazione")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public SignatureDTO credentials(CredentialsDTO credentials) {
    this.credentials = credentials;
    return this;
  }

   /**
   * credenziali di accesso al dispositivo, disponibili in sola scrittura: non vengono mai restituite da una GET
   * @return credentials
  **/
  @ApiModelProperty(value = "credenziali di accesso al dispositivo, disponibili in sola scrittura: non vengono mai restituite da una GET")
  public CredentialsDTO getCredentials() {
    return credentials;
  }

  public void setCredentials(CredentialsDTO credentials) {
    this.credentials = credentials;
  }

  public SignatureDTO label(LabelDTO label) {
    this.label = label;
    return this;
  }

   /**
   * etichetta visibile nel documento che attesta l&#39;avvenuta firma
   * @return label
  **/
  @ApiModelProperty(value = "etichetta visibile nel documento che attesta l'avvenuta firma")
  public LabelDTO getLabel() {
    return label;
  }

  public void setLabel(LabelDTO label) {
    this.label = label;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SignatureDTO signature = (SignatureDTO) o;
    return Objects.equals(this.hsmId, signature.hsmId) &&
        Objects.equals(this.keyAlias, signature.keyAlias) &&
        Objects.equals(this.reason, signature.reason) &&
        Objects.equals(this.location, signature.location) &&
        Objects.equals(this.credentials, signature.credentials) &&
        Objects.equals(this.label, signature.label);
  }

  @Override
  public int hashCode() {
    return Objects.hash(hsmId, keyAlias, reason, location, credentials, label);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SignatureDTO {\n");
    
    sb.append("    hsmId: ").append(toIndentedString(hsmId)).append("\n");
    sb.append("    keyAlias: ").append(toIndentedString(keyAlias)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

